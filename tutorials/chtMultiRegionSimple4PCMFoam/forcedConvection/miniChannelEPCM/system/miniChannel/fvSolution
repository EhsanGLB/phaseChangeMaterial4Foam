/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | foam-extend: Open Source CFD                    |
|  \\    /   O peration     | Version:     4.1                                |
|   \\  /    A nd           | Web:         http://www.foam-extend.org         |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      fvSolution;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

solvers
{
    p
    {
        solver           PCG;
        preconditioner   DIC;
        tolerance        1e-06;
        relTol           0.01;
    }

    U
    {
        solver           BiCGStab;
        preconditioner   DILU;
        tolerance        1e-05;
        relTol           0.1;
    }

    k
    {
        solver           BiCGStab;
        preconditioner   DILU;
        tolerance        1e-05;
        relTol           0.1;
    }

    epsilon
    {
        solver           BiCGStab;
        preconditioner   DILU;
        tolerance        1e-05;
        relTol           0.1;
    }

    R
    {
        solver           BiCGStab;
        preconditioner   DILU;
        tolerance        1e-05;
        relTol           0.1;
    }
    nuTilda
    {
        solver           BiCGStab;
        preconditioner   DILU;
        tolerance        1e-05;
        relTol           0.1;
    }

    T
    {
        solver           BiCGStab;
        preconditioner   DILU;
        tolerance        1e-05;
        relTol           0.1;
    }

    alphaEPCM
    {
        solver          BiCGStab;
        preconditioner  DILU;
        tolerance       1e-08;
        relTol          0;
    }
}

SIMPLE
{
    nNonOrthogonalCorrectors 8;
    convergence     1e-5;
}

relaxationFactors
{
    fields
    {
        p               0.1;
    }

    equations
    {
        U               0.1;
        T               0.1;
        k               0.3;
        epsilon         0.3;
        R               0.3;
        nuTilda         0.3;
    }
}

cache
{
    grad(U);
    grad(p);
    grad(k);
    grad(omega);
    grad(epsilon);
}


// ************************************************************************* //
